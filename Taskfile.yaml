version: '3'

env:
  CODE_BASE:
    sh: printf "%s" {{.ROOT_DIR}}
  SUPERVISORD_INI:
    sh: printf "%s/%s/supervisord/supervisord.ini" {{.ROOT_DIR}} $(yq .params.supvDir ./conf/baseconfig.yaml)

includes:
  build: ./taskfiles/build.yaml

tasks:
  test:
    cmds:
      - |
        export PATH={{.PATH}}
        env | grep -i _proxy
  default:
    - task: buildAll

  build-all:
    aliases: [build-all]
    desc: build all of babylon component
    silent: true
    cmds:
      - task: build:buildAll

  up-supervisord:
    aliases: [ start-supervisord ]
    desc: start supervisord
    silent: true
    cmds:
      - |
        printf "up supervisor, ini path: ${SUPERVISORD_INI}, log path: ${SUPERVISORD_LOG} \n"
        supervisord -n -c ${SUPERVISORD_INI}

  down-supervisord:
    aliases: [ stop-supervisord ]
    desc: stop supervisord
    silent: true
    cmds:
      - |
        export PATH={{.PATH}}
        supervisorctl -c ${SUPERVISORD_INI} shutdown

  init-network-conf:
    aliases: [init-babylon-config]
    desc: init babylon network config
    silent: true
    cmds:
      - |
        export PATH={{.PATH}}
        printf "Start init network config, codebase path: ${CODE_BASE} \n"
        source ${CODE_BASE}/lib/utils.sh && init_config      

  up-babylon-network:
    aliases: [ start-babylon, up-babylon ]
    deps: [ up-supervisord ]
    desc: start babylon
    silent: true
    cmds:
      - |
        export PATH={{.PATH}}
        printf "start up babylon network\n"

  init-bitcoin:
    aliases: [ init-bitcoin]
    desc: init bitcoin network
    silent: true
    cmds:
      - |
        export PATH={{.PATH}}
        printf "start init bitcoin nework\n"
        source ${CODE_BASE}/lib/utils.sh && bitcoin_init
        printf "end init bitcoin nework\n"

  deploy_babylon_contract:
    aliases: [ deploy-babylon-contract ]
    desc: deploy babylon contract
    silent: true
    cmds:
      - |
        export PATH={{.PATH}}
        printf "deploy babylon contract\n"
        source ${CODE_BASE}/lib/utils.sh && deploy_babylon_contract
        printf "end deploy babylon contract\n" 

  init-relayer:
    aliases: [ init-relayer]
    desc: init cosmos relayer
    silent: true
    cmds:
      - |
        export PATH={{.PATH}}
        printf "start init relayer\n"
        source ${CODE_BASE}/lib/utils.sh && init_relayer
        printf "end init relayer\n"   

  start-relayer:
    aliases: [ start-relayer ]
    desc: start cosmos relayer
    silent: true
    cmds:
      - |
        export PATH={{.PATH}}
        printf "start relayer\n"
        source ${CODE_BASE}/lib/utils.sh && start_relayer
        printf "end start relayer\n"   

  ps:
    desc: show services status.
    silent: true
    aliases: [status]
    cmds:
      - |
        export PATH={{.PATH}}
        supervisorctl -c ${SUPERVISORD_INI} status

  clean:
    desc: stop services and rm config.
    silent: true
    aliases: [ clean all data and services ]
    deps: [ down-supervisord ]
    cmds:
      - |
        export PATH={{.PATH}}
        rm -rf ${CODE_BASE}/testnets

  rm-all:
    desc: rm config and data in testnet dir.
    silent: true
    aliases: [ clean all data in testnet dir ]
    cmds:
      - |
        export PATH={{.PATH}}
        rm -rf ${CODE_BASE}/testnets